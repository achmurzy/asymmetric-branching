2^6
?factorial
?sum
?eval
eval(2 ^ 2)
eval(seq(1, 10), 2 ^ n)
eval(seq(1, 10), function(x) 2 ^ x)
x <- seq(1, 10)
2 ^ x
sum(s ^ seq(1,10))
sum(2 ^ seq(1,10))
install.packages(("hash"))
5 < 6 || 4 < 3
c_1 = 2
c_2 = 3
paste(c_1, c_2, "_")
paste(c_1, c_2, sep="_")
p_id = 2
paste(p_id)
paste("", "", sep="_")
children <- unlist(strsplit(paste("", "", sep="_"), split="_"))
source("asymmetric_generation.R")
source("asymmetric_generation.R")
install.packages("ggpmisc\")
install.packages("ggpmisc")
install.packages("ggpmisc")
install.packages("reshape")
install.packages("smatr")
source("asymmetric_generation.R")
source("asymmetric_generation.R")
source("asymmetric_generation.R")
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
log(10/1000)
log(10/1000) / log(0.3)
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
?t
t(c(1, "2", 3, "4"))
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
tree
nrow(tree)
sum(2 ^ seq(0, 6))
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
tree
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
tree
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
tree
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
tree
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
tree
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
tree
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
trree
tree
which(tree$LENGTH == 300)
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
tree
tree[nrow(tree),]
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
tree
which(tree$LENGTH < leaf_length_def)
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
tree
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
gj <- ggplot(tree, aes(x=LENGTH)) + geom_histogram() + scale_x_log10()
print(gj)
gj <- ggplot(tree, aes(x=LENGTH)) + geom_histogram(binwidth=10) + scale_x_log10()
print(gj)
gj <- ggplot(tree, aes(x=LENGTH)) + geom_histogram(binwidth=1) + scale_x_log10()
print(gj)
gj <- ggplot(tree, aes(x=LENGTH)) + geom_histogram(binwidth=0.1) + scale_x_log10()
print(gj)
source("asymmetric_generation.R")
tree <- default_symmetric_tree()
gj <- ggplot(tree, aes(x=LENGTH)) + geom_histogram(binwidth=0.1) + scale_x_log10()
print(gj)
tree
tree <- tree[which(tree$POS),]
gj <- ggplot(tree, aes(x=LENGTH)) + geom_histogram(binwidth=0.1) + scale_x_log10()
print(gj)
tree
source("asymmetric_generation.R")
tree <- default_asymmetric_tree()
tree
source("asymmetric_generation.R")
tree <- default_asymmetric_tree()
tree
source("asymmetric_generation.R")
tree <- build_asymmetric_tree(d_beta=0.25, d_gamma=0.25)
source("asymmetric_generation.R")
tree <- build_asymmetric_tree(d_beta=0.25, d_gamma=0.25)
source("asymmetric_generation.R")
tree <- build_asymmetric_tree(d_beta=0.25, d_gamma=0.25)
source("asymmetric_generation.R")
tree <- build_asymmetric_tree(d_beta=0.25, d_gamma=0.25)
source("asymmetric_generation.R")
tree <- build_asymmetric_tree(d_beta=0.25, d_gamma=0.25)
tree
source("asymmetric_generation.R")
tree <- build_asymmetric_tree(d_beta=0.25, d_gamma=0.25)
tree
source("asymmetric_generation.R")
tree <- build_asymmetric_tree(d_beta=0.25, d_gamma=0.25)
tree
which(tree$BRANCH_ORDER == seq(1, 3))
which(tree$BRANCH_ORDER == seq(1, 5))
which(tree$BRANCH_ORDER == seq(1, 8))
which(tree$BRANCH_ORDER == seq(1, 7))
which(tree$BRANCH_ORDER == 1)
which(tree$CHILD_IDS == "_")
terminal = which(tree$CHILD_IDS == "_")
children <- unlist(strsplit(tree[terminal,]$PARENT_ID, split="_"))
children
tree
children <- unlist(strsplit(tree[1,]$PARENT_ID, split="_"))
children
children == 0
children == 1
as.integer(children)
as.integer(children) == 2
as.integer(children) == 0
if(0)
{}
0
if(0) { print("ballsack")}
if(1) { print("ballsack")}
if(2) { print("ballsack")}
children <- unlist(strsplit(tree[terminal,]$PARENT_ID, split="_"))
as.integer
as.integer(children)
if(children) { print("ballsack")}
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
o_tree
tree
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
orders
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
tree
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
?break
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
c(TRUE, FALSE)
if(c(TRUE, FALSE))
{}
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
o_tree
TRUE[1]
TRUE[5]
TRUE[2]
TRUE[1]
source("asymmetric_generation.R")
o_tree <- centripetal_ordering_scheme(tree)
o_tree
?seq
range(seq(0, 10))
seq(range(seq(0, 10)))
for(i in range(0, 10))
{}
for(i in range(0, 10)){ print(i)}
for(i in 0:10{ print(i)}
for(i in 0:10){ print(i)}
gg[1] = 2
gg <- c()
gg[1] = 2
gg[2] = 2
gg[214] = 4
gg
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
tree_distribution(o_tree, 1)
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
?names
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
?vector
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
?set
?get
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
rbinom(1, 1, prob=0.5)
rbinom(1, 1, prob=0.5)\
rbinom(1, 1, prob=0.5)\
rbinom(1, 1, prob=0.5)
rbinom(1, 1, prob=0.5)
rbinom(1, 1, prob=0.5)
rbinom(1, 1, prob=0.5)
rbinom(1, 1, prob=0.5)
list(go=1)
list[["go"]]
list["go"]
list(go=1)
bug <0 list(go=1)
bug <- list(go=1)
bug[["go"]]
bug["go"]
source("asymmetric_generation.R")
tree_distribution(o_tree, 1)
dexp(3)
dexp(4)
dexp(1)
dexp(0)
dexp(0.5)
dexp(0.5, log=TRUE)
dexp(1, log=TRUE)
dexp(2, log=TRUE)
dexp(3, log=TRUE)
dexp(5, log=TRUE)
dexp(5)
dexp(1)
source("asymmetric_generation.R")
distribute_food(o_tree)
source("asymmetric_generation.R")
o_tree<-distribute_food(o_tree)
o_tree
o_tree$FOOD
o_tree$FOOD <- c()
o_tree
o_tree$FOOD <- c()
colnames(o_tree)
typeof(o_tree)
o_tree <- centripetal_ordering_scheme(tree)
td <- tree_distribution(o_tree)
td
typeof(td)
typeof(td[["1"]])
typeof(td["1"])
o_tree$FOOD <- c()
o_tree
colnames(o_tree)
colnames(o_tree) <- c(colnames(o_tree), "FOOD")
length(colnames(o_tree))
typeof(o_tree)
typeof(tree)
cbind(o_tree, c())
cbind(o_tree, c(15))
?cbind
cbind(o_tree, FOOD=c(15)
)
o_tree <- centripetal_ordering_scheme(tree)
distribute_food(o_tree)
cbind(o_tree, FOOD=0)
o_tree <- centripetal_ordering_scheme(tree)
distribute_food(o_tree)
source("asymmetric_generation.R")
distribute_food(o_tree)
source("asymmetric_generation.R")
distribute_food(o_tree)
?dexp
name <- function(cd=dexp) { cd(0) }
name()
