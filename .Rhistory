cylinder_data_names <- paste("data/results/", cylinder_data_names, sep="")
cyl_data <- open_TreeQSM(cylinder_data_names[1])
cyl_data$FILENAME <- rep(stripped_names[1], nrow(cyl_data))
for(i in seq(2, length(cylinder_data_names)))
{
data <- open_TreeQSM(cylinder_data_names[i])
data$FILENAME <- rep(stripped_names[i], nrow(cyl_data))
cyl_data <- rbind(cyl_data, data)
}
source("munge.R")
source("analyse.R")
tree_metadata <- read.csv("data/tree_metadata.csv", stringsAsFactors = FALSE)
cylinder_data_names <- list.files(path="data/results/", pattern="^cyl_data_")
stripped_names <- sub(pattern=".*cyl_data_ *(.*?) *.pcd.*", "\\1", x=cylinder_data_names)
cylinder_data_names <- paste("data/results/", cylinder_data_names, sep="")
cyl_data <- open_TreeQSM(cylinder_data_names[1])
cyl_data$FILENAME <- rep(stripped_names[1], nrow(cyl_data))
for(i in seq(2, length(cylinder_data_names)))
{
data <- open_TreeQSM(cylinder_data_names[i])
data$FILENAME <- rep(stripped_names[i], nrow(data))
cyl_data <- rbind(cyl_data, data)
}
?pmax
read.csv("data/results/tree_data_8_sans_feuilles.pcd_t1_m1_D0.15_DA0.06_DI0.03_L3_F3.txt")
read.csv("data/results/tree_data_8_sans_feuilles.pcd_t1_m1_D0.15_DA0.06_DI0.03_L3_F3.txt", header = FALSE)
read.csv("data/results/tree_data_Ery_01.pcd_t1_m1_D0.15_DA0.06_DI0.02_L3_F3.txt", header = FALSE)
tt <- read.csv("data/results/tree_data_Ery_01.pcd_t1_m1_D0.15_DA0.06_DI0.02_L3_F3.txt", header = FALSE)
t(tt)
colnames(t(tt)) <- c("TREE_VOLUME", "TRUNK_VOLUME", "BRANCH_VOLUME", "TREE_HEIGHT", "TRUNK_LENGTH", "BRANCH_LENGTH",
"NUM_BRANCHES", "MAX_BRANCH_ORDER", "TREE_AREA", "DBH_QSM", "DBH_CYL")
colnames(t(tt))
colnames(t(tt)) <- c("TREE_VOLUME", "TRUNK_VOLUME", "BRANCH_VOLUME", "TREE_HEIGHT", "TRUNK_LENGTH", "BRANCH_LENGTH",
"NUM_BRANCHES", "MAX_BRANCH_ORDER", "TREE_AREA", "DBH_QSM", "DBH_CYL")
typeof(t(tt))
colnames(t(tt)) <- rep("Ass", 11)
as.data.frame(t(tt))
?join
tree_data
source("munge.R")
source("analyse.R")
tree_metadata <- read.csv("data/tree_metadata.csv", stringsAsFactors = FALSE)
cylinder_data_names <- list.files(path="data/results/", pattern="^cyl_data_")
stripped_names <- sub(pattern=".*cyl_data_ *(.*?) *.pcd.*", "\\1", x=cylinder_data_names)
cylinder_data_names <- paste("data/results/", cylinder_data_names, sep="")
cylinder_data <- open_TreeQSM(cylinder_data_names[1])
cylinder_data$FILENAME <- rep(stripped_names[1], nrow(cylinder_data))
tree_data_names <- list.files(path="data/results/", pattern="^tree_data_")
tree_data_names <- paste("data/results/", tree_data_names, sep="")
tree_data_vars <- c("FILENAME", "TREE_VOLUME", "TRUNK_VOLUME", "BRANCH_VOLUME", "TREE_HEIGHT", "TRUNK_LENGTH",
"BRANCH_LENGTH", "NUM_BRANCHES", "MAX_BRANCH_ORDER", "TREE_AREA", "DBH_QSM", "DBH_CYL")
tree_data <- as.data.frame(t(read.csv(tree_data_names[1], header = FALSE)))
tree_data$FILENAME <- rep(stripped_names[1], nrow(cylinder_data))
#We might try the entire analysis with different definitions of branch, rather than using
#cylinders which are fine-grained internodes. Ignores biology of bifurcations somewhat (a lot)
#branch_data_names <- list.files(path="data/results/", pattern="^branch_data_")
for(i in seq(2, length(cylinder_data_names)))
{
print(paste("Working on tree:", stripped_names[i]))
tr_data <- as.data.frame(t(read.csv(tree_data_names[i], header = FALSE)))
tr_data$FILENAME <- rep(stripped_names[i], nrow(tr_data))
#cyl_data <- open_TreeQSM(cylinder_data_names[i])
#cyl_data <- branching_analysis(cyl_data)
#cyl_data$FILENAME <- rep(stripped_names[i], nrow(cyl_data))
tree_data <- rbind(tree_data, tr_data)
#cylinder_data <- rbind(cylinder_data, cyl_data)
}
#Interact with metadata for whole-tree parameters
joined_data <- join(tree_data, tree_metadata, by="FILENAME")
tr_data
tree_data
tree_data$FILENAME <- stripped_names[1]
tree_data
tree_data <- data.frame(FILENAME=character(num_trees), TREE_VOLUME=numeric(num_trees), TRUNK_VOLUME=numeric(num_trees),
BRANCH_VOLUME=numeric(num_trees), TREE_HEIGHT=numeric(num_trees), TRUNK_LENGTH=numeric(num_trees),
BRANCH_LENGTH=numeric(num_trees), NUM_BRANCHES=integer(num_trees), MAX_BRANCH_ORDER=integer(num_trees),
TREE_AREA=numeric(num_trees), DBH_QSM=numeric(num_trees), DBH_CYL=numeric(num_trees))
num_trees = length(cylinder_data_names)
tree_data <- data.frame(FILENAME=character(num_trees), TREE_VOLUME=numeric(num_trees), TRUNK_VOLUME=numeric(num_trees),
BRANCH_VOLUME=numeric(num_trees), TREE_HEIGHT=numeric(num_trees), TRUNK_LENGTH=numeric(num_trees),
BRANCH_LENGTH=numeric(num_trees), NUM_BRANCHES=integer(num_trees), MAX_BRANCH_ORDER=integer(num_trees),
TREE_AREA=numeric(num_trees), DBH_QSM=numeric(num_trees), DBH_CYL=numeric(num_trees))
tree_data[1,] <- as.data.frame(t(read.csv(tree_data_names[1], header = FALSE)))
as.data.frame(t(read.csv(tree_data_names[1], header = FALSE)))
tree_data[1,] <- c(stripped_names[1], as.data.frame(t(read.csv(tree_data_names[1], header = FALSE))))
tree_data
read.csv(tree_data_names[1], header = FALSE)
read.csv(tree_data_names[1], header = FALSE)[1:11]
read.csv(tree_data_names[1], header = FALSE)[,1:11]
read.csv(tree_data_names[1], header = FALSE)[1:11,]
tree_data[1,] <- c(stripped_names[1], as.data.frame(t(read.csv(tree_data_names[1], header = FALSE)[1:11,])))
tree_data <- data.frame(FILENAME=character(num_trees), TREE_VOLUME=numeric(num_trees), TRUNK_VOLUME=numeric(num_trees),
BRANCH_VOLUME=numeric(num_trees), TREE_HEIGHT=numeric(num_trees), TRUNK_LENGTH=numeric(num_trees),
BRANCH_LENGTH=numeric(num_trees), NUM_BRANCHES=integer(num_trees), MAX_BRANCH_ORDER=integer(num_trees),
TREE_AREA=numeric(num_trees), DBH_QSM=numeric(num_trees), DBH_CYL=numeric(num_trees))
tree_data[1,] <- c(stripped_names[1], as.data.frame(t(read.csv(tree_data_names[1], header = FALSE)[1:11,])))
stripped_names
c(stripped_names[1], as.data.frame(t(read.csv(tree_data_names[1], header = FALSE)[1:11,])))
read.csv(tree_data_names[1], header = FALSE)
as.vector(read.csv(tree_data_names[1], header = FALSE))
?scan
scan(tree_data_names[1], header = FALSE))
scan(tree_data_names[1])
scan(tree_data_names[1])[1:11]
source("munge.R")
source("analyse.R")
tree_metadata <- read.csv("data/tree_metadata.csv", stringsAsFactors = FALSE)
cylinder_data_names <- list.files(path="data/results/", pattern="^cyl_data_")
stripped_names <- sub(pattern=".*cyl_data_ *(.*?) *.pcd.*", "\\1", x=cylinder_data_names)
cylinder_data_names <- paste("data/results/", cylinder_data_names, sep="")
cylinder_data <- open_TreeQSM(cylinder_data_names[1])
cylinder_data$FILENAME <- rep(stripped_names[1], nrow(cylinder_data))
num_trees = length(cylinder_data_names)
tree_data_names <- list.files(path="data/results/", pattern="^tree_data_")
tree_data_names <- paste("data/results/", tree_data_names, sep="")
tree_data <- data.frame(FILENAME=character(num_trees), TREE_VOLUME=numeric(num_trees), TRUNK_VOLUME=numeric(num_trees),
BRANCH_VOLUME=numeric(num_trees), TREE_HEIGHT=numeric(num_trees), TRUNK_LENGTH=numeric(num_trees),
BRANCH_LENGTH=numeric(num_trees), NUM_BRANCHES=integer(num_trees), MAX_BRANCH_ORDER=integer(num_trees),
TREE_AREA=numeric(num_trees), DBH_QSM=numeric(num_trees), DBH_CYL=numeric(num_trees))
tree_data[1,] <- c(stripped_names[1], scan(tree_data_names[1])[1:11])
#We might try the entire analysis with different definitions of branch, rather than using
#cylinders which are fine-grained internodes. Ignores biology of bifurcations somewhat (a lot)
#branch_data_names <- list.files(path="data/results/", pattern="^branch_data_")
for(i in seq(2, length(cylinder_data_names)))
{
print(paste("Working on tree:", stripped_names[i]))
tree_data[i,] <- c(stripped_names[i], scan(tree_data_names[i])[1:11])
#cyl_data <- open_TreeQSM(cylinder_data_names[i])
#cyl_data <- branching_analysis(cyl_data)
#cyl_data$FILENAME <- rep(stripped_names[i], nrow(cyl_data))
tree_data <- rbind(tree_data, tr_data)
#cylinder_data <- rbind(cylinder_data, cyl_data)
}
#Interact with metadata for whole-tree parameters
joined_data <- merge(tree_data, tree_metadata, by="FILENAME")
tree_data
source("munge.R")
source("analyse.R")
tree_metadata <- read.csv("data/tree_metadata.csv", stringsAsFactors = FALSE)
cylinder_data_names <- list.files(path="data/results/", pattern="^cyl_data_")
stripped_names <- sub(pattern=".*cyl_data_ *(.*?) *.pcd.*", "\\1", x=cylinder_data_names)
cylinder_data_names <- paste("data/results/", cylinder_data_names, sep="")
cylinder_data <- open_TreeQSM(cylinder_data_names[1])
cylinder_data$FILENAME <- rep(stripped_names[1], nrow(cylinder_data))
num_trees = length(cylinder_data_names)
tree_data_names <- list.files(path="data/results/", pattern="^tree_data_")
tree_data_names <- paste("data/results/", tree_data_names, sep="")
tree_data <- data.frame(FILENAME=character(num_trees), TREE_VOLUME=numeric(num_trees), TRUNK_VOLUME=numeric(num_trees),
BRANCH_VOLUME=numeric(num_trees), TREE_HEIGHT=numeric(num_trees), TRUNK_LENGTH=numeric(num_trees),
BRANCH_LENGTH=numeric(num_trees), NUM_BRANCHES=integer(num_trees), MAX_BRANCH_ORDER=integer(num_trees),
TREE_AREA=numeric(num_trees), DBH_QSM=numeric(num_trees), DBH_CYL=numeric(num_trees))
tree_data[1,] <- c(stripped_names[1], scan(tree_data_names[1])[1:11])
#We might try the entire analysis with different definitions of branch, rather than using
#cylinders which are fine-grained internodes. Ignores biology of bifurcations somewhat (a lot)
#branch_data_names <- list.files(path="data/results/", pattern="^branch_data_")
for(i in seq(2, length(cylinder_data_names)))
{
print(paste("Working on tree:", stripped_names[i]))
tree_data[i,] <- c(stripped_names[i], scan(tree_data_names[i])[1:11])
#cyl_data <- open_TreeQSM(cylinder_data_names[i])
#cyl_data <- branching_analysis(cyl_data)
#cyl_data$FILENAME <- rep(stripped_names[i], nrow(cyl_data))
#cylinder_data <- rbind(cylinder_data, cyl_data)
}
#Interact with metadata for whole-tree parameters
joined_data <- merge(tree_data, tree_metadata, by="FILENAME")
joined_data
?merge
#Interact with metadata for whole-tree parameters
joined_data <- merge(tree_data, tree_metadata, by="FILENAME", all=TRUE)
joined_data
tree_data
source("munge.R")
source("analyse.R")
tree_metadata <- read.csv("data/tree_metadata.csv", stringsAsFactors = FALSE)
cylinder_data_names <- list.files(path="data/results/", pattern="^cyl_data_")
stripped_names <- sub(pattern=".*cyl_data_ *(.*?) *.pcd.*", "\\1", x=cylinder_data_names)
cylinder_data_names <- paste("data/results/", cylinder_data_names, sep="")
cylinder_data <- open_TreeQSM(cylinder_data_names[1])
cylinder_data$FILENAME <- rep(stripped_names[1], nrow(cylinder_data))
num_trees = length(cylinder_data_names)
tree_data_names <- list.files(path="data/results/", pattern="^tree_data_")
tree_data_names <- paste("data/results/", tree_data_names, sep="")
tree_data <- data.frame(FILENAME=character(num_trees), TREE_VOLUME=numeric(num_trees), TRUNK_VOLUME=numeric(num_trees),
BRANCH_VOLUME=numeric(num_trees), TREE_HEIGHT=numeric(num_trees), TRUNK_LENGTH=numeric(num_trees),
BRANCH_LENGTH=numeric(num_trees), NUM_BRANCHES=integer(num_trees), MAX_BRANCH_ORDER=integer(num_trees),
TREE_AREA=numeric(num_trees), DBH_QSM=numeric(num_trees), DBH_CYL=numeric(num_trees))
tree_data[1,] <- c(stripped_names[1], scan(tree_data_names[1])[1:11])
#We might try the entire analysis with different definitions of branch, rather than using
#cylinders which are fine-grained internodes. Ignores biology of bifurcations somewhat (a lot)
#branch_data_names <- list.files(path="data/results/", pattern="^branch_data_")
for(i in seq(2, length(cylinder_data_names)))
{
print(paste("Working on tree:", stripped_names[i]))
tree_data[i,] <- c(stripped_names[i], scan(tree_data_names[i])[1:11])
#cyl_data <- open_TreeQSM(cylinder_data_names[i])
#cyl_data <- branching_analysis(cyl_data)
#cyl_data$FILENAME <- rep(stripped_names[i], nrow(cyl_data))
#cylinder_data <- rbind(cylinder_data, cyl_data)
}
#Interact with metadata for whole-tree parameters
joined_data <- merge(tree_data, tree_metadata, by="FILENAME", all=TRUE)
joined_data
tree_data
stripped_names
tree_data_names
tree_metadata
tree_data
source("munge.R")
source("analyse.R")
tree_metadata <- read.csv("data/tree_metadata.csv", stringsAsFactors = FALSE)
cylinder_data_names <- list.files(path="data/results/", pattern="^cyl_data_")
stripped_names <- sub(pattern=".*cyl_data_ *(.*?) *.pcd.*", "\\1", x=cylinder_data_names)
cylinder_data_names <- paste("data/results/", cylinder_data_names, sep="")
cylinder_data <- open_TreeQSM(cylinder_data_names[1])
cylinder_data$FILENAME <- rep(stripped_names[1], nrow(cylinder_data))
num_trees = length(cylinder_data_names)
tree_data_names <- list.files(path="data/results/", pattern="^tree_data_")
tree_data_names <- paste("data/results/", tree_data_names, sep="")
tree_data <- data.frame(FILENAME=character(num_trees), TREE_VOLUME=numeric(num_trees), TRUNK_VOLUME=numeric(num_trees),
BRANCH_VOLUME=numeric(num_trees), TREE_HEIGHT=numeric(num_trees), TRUNK_LENGTH=numeric(num_trees),
BRANCH_LENGTH=numeric(num_trees), NUM_BRANCHES=integer(num_trees), MAX_BRANCH_ORDER=integer(num_trees),
TREE_AREA=numeric(num_trees), DBH_QSM=numeric(num_trees), DBH_CYL=numeric(num_trees))
tree_data[1,] <- c(stripped_names[1], scan(tree_data_names[1])[1:11])
#We might try the entire analysis with different definitions of branch, rather than using
#cylinders which are fine-grained internodes. Ignores biology of bifurcations somewhat (a lot)
#branch_data_names <- list.files(path="data/results/", pattern="^branch_data_")
for(i in seq(2, length(cylinder_data_names)))
{
print(paste("Working on tree:", stripped_names[i]))
tree_data[i,] <- c(stripped_names[i], scan(tree_data_names[i])[1:11])
#cyl_data <- open_TreeQSM(cylinder_data_names[i])
#cyl_data <- branching_analysis(cyl_data)
#cyl_data$FILENAME <- rep(stripped_names[i], nrow(cyl_data))
#cylinder_data <- rbind(cylinder_data, cyl_data)
}
tree_data
warnings()
source("munge.R")
source("analyse.R")
tree_metadata <- read.csv("data/tree_metadata.csv", stringsAsFactors = FALSE)
cylinder_data_names <- list.files(path="data/results/", pattern="^cyl_data_")
stripped_names <- sub(pattern=".*cyl_data_ *(.*?) *.pcd.*", "\\1", x=cylinder_data_names)
cylinder_data_names <- paste("data/results/", cylinder_data_names, sep="")
cylinder_data <- open_TreeQSM(cylinder_data_names[1])
cylinder_data$FILENAME <- rep(stripped_names[1], nrow(cylinder_data))
num_trees = length(cylinder_data_names)
tree_data_names <- list.files(path="data/results/", pattern="^tree_data_")
tree_data_names <- paste("data/results/", tree_data_names, sep="")
tree_data <- data.frame(FILENAME=character(num_trees), TREE_VOLUME=numeric(num_trees), TRUNK_VOLUME=numeric(num_trees),
BRANCH_VOLUME=numeric(num_trees), TREE_HEIGHT=numeric(num_trees), TRUNK_LENGTH=numeric(num_trees),
BRANCH_LENGTH=numeric(num_trees), NUM_BRANCHES=integer(num_trees), MAX_BRANCH_ORDER=integer(num_trees),
TREE_AREA=numeric(num_trees), DBH_QSM=numeric(num_trees), DBH_CYL=numeric(num_trees), stringsAsFactors = FALSE)
tree_data[1,] <- c(stripped_names[1], scan(tree_data_names[1])[1:11])
#We might try the entire analysis with different definitions of branch, rather than using
#cylinders which are fine-grained internodes. Ignores biology of bifurcations somewhat (a lot)
#branch_data_names <- list.files(path="data/results/", pattern="^branch_data_")
for(i in seq(2, length(cylinder_data_names)))
{
print(paste("Working on tree:", stripped_names[i]))
tree_data[i,] <- c(stripped_names[i], scan(tree_data_names[i])[1:11])
#cyl_data <- open_TreeQSM(cylinder_data_names[i])
#cyl_data <- branching_analysis(cyl_data)
#cyl_data$FILENAME <- rep(stripped_names[i], nrow(cyl_data))
#cylinder_data <- rbind(cylinder_data, cyl_data)
}
#Interact with metadata for whole-tree parameters
joined_data <- merge(tree_data, tree_metadata, by="FILENAME", all=TRUE)
joined_data
scan("data/excluded.txt")
?scan
scan("data/excluded.txt", what=character())
excluded <- scan("data/excluded.txt", what=character())
"strom_2" %in% excluded
source("munge.R")
source("analyse.R")
cyl_data <- open_TreeQSM("data/results/cyl_data_Ery_01.pcd_t1_m1_D0.15_DA0.06_DI0.02_L3_F3.txt")
cyl_data <- branching_analysis(cyl_data)
source("munge.R")
#We would need to add code to take output from cylinder analysis and add it to the whole-tree data
#cyl_data <- open_TreeQSM(cylinder_data_names[i])
#cyl_data <- munge_TreeQSM(cyl_data)
#cyl_data <- branching_analysis(cyl_data)
#cyl_data$FILENAME <- rep(stripped_names[i], nrow(cyl_data))
#cylinder_data <- rbind(cylinder_data, cyl_data)
}
cyl_data <- munge_TreeQSM(cyl_data)
cyl_data <- branching_analysis(cyl_data)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data)
source("plot.R")
plot_volume(cyl_data, TRUE, "Ery_01")
plot_volume(cyl_data, FALSE, "Ery_01")
?ggsave
plot_volume(cyl_data, FALSE, "Ery_01")
source("plot.R")
plot_volume(cyl_data, FALSE, "Ery_01")
source("plot.R")
plot_volume(cyl_data, FALSE, "Ery_01")
?ggsave
source("plot.R")
plot_volume(cyl_data, FALSE, "Ery_01")
?missing
?geom_smooth
?stat_smooth
?stat_poly_eq
?geom_smooth
cyl_data <- branching_analysis(cyl_data)
plot_volume(cyl_data, FALSE, "Ery_01")
source("plot.R")
plot_volume(cyl_data, FALSE, "Ery_01")
?lm
?stat_bin
?stat_poly_eq
source("plot.R")
plot_volume(cyl_data, FALSE, "Ery_01")
source("plot.R")
plot_volume(cyl_data, FALSE, "Ery_01")
source("plot.R")
plot_volume(cyl_data, FALSE, "Ery_01")
plot_volume(cyl_data, name="Ery_01")
source("plot.R")
plot_volume(cyl_data, name="Ery_01")
source("plot.R")
plot_volume(cyl_data, name="Ery_01")
source("plot.R")
plot_volume(cyl_data, name="Ery_01")
source("plot.R")
plot_volume(cyl_data, name="Ery_01")
char = "italic(y)~`=`~-0.963 + 0.456*~italic(x)"
as.numeric(gsub("([0-9]+).*$", "\\1", char))
char
as.numeric(gsub("([0-9]+).*$", "\\1", char))
as.numeric(gsub("\\D", "", char))
source("plot.R")
plot_volume(cyl_data, name="Ery_01")
as.numeric(unlist(regmatches(char,
gregexpr("[[:digit:]]+\\.*[[:digit:]]*",str))
)      )
as.numeric(unlist(regmatches(str,gregexpr("(?>-)*[[:digit:]]+\\.*[[:digit:]]*",char, perl=TRUE))))
char
typeof(char)
as.numeric(unlist(regmatches(char,gregexpr("(?>-)*[[:digit:]]+\\.*[[:digit:]]*",char, perl=TRUE))))
source("plot.R")
plot_volume(cyl_data, scaling = scaling, name="Ery_01")
cyl_data <- branching_analysis(cyl_data)
plot_volume(cyl_data$branches, scaling = cyl_data$scaling, name="Ery_01")
source("munge.R")
source("analyse.R")
source("plot.R")
cyl_data <- branching_analysis(cyl_data)
plot_volume(cyl_data$branches, scaling = cyl_data$scaling, name="Ery_01")
source("plot.R")
plot_volume(cyl_data$branches, scaling = cyl_data$scaling, name="Ery_01")
plot_exponents(cyl_data$branches)
plot_asymmetry(cyl_data$branches, "Ery_01")
source("plot.R")
plot_asymmetry(cyl_data$branches, "Ery_01")
source("plot.R")
plot_symmetry(cyl_data$branches, "Ery_01")
unlist(cyl_data$scaling)
cyl_data <- branching_analysis(cyl_data)
cyl_data
cyl_data <- branching_analysis(cyl_data$branches)
cyl_data <- branching_analysis(cyl_data$branches)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data$branches)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data$branches)
?lm
library(smatr)
plot_tree_network(cyl_data$branches, "THETA")
source("plot.R")
plot_tree_network(cyl_data$branches, "THETA")
log(-1)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data$branches)
source("analyse.R")
cyl_data <- branching_analysis(cyl_data$branches)
plot_volume(cyl_data$branches, cyl_data$scaling, "Ery_01")
source("plot.R")
plot_volume(cyl_data$branches, cyl_data$scaling, "Ery_01")
pinus <- open_TreeQSM("data/results/cyl_data_Pinus03.pcd_t1_m1_D0.15_DA0.06_DI0.02_L3_F3.txt")
pinus <- munge_TreeQSM(pinus)
out <- branching_analysis(pinus)
plot_volume(out$branches, out$scaling, "Pinus03")
ls()
rm(list=ls())
source("workflow")
source("workflow.R")
source("workflow.R")
?print
source("workflow.R")
colnames(joined_data)
range(joined_data$BETA)
range(tree_data$THETA)
range(joined_data$THETA)
joined_data
range(joined_data$THETA, na.rm=TRUE)
?merge
joined_data <- merge(tree_data, tree_metadata, by="FILENAME", all=FALSE)
range(joined_data$THETA)
?sma
ery01 <- cylinder_data[which(cylinder_data$FILENAME == "Ery_01"),]
empirical = sma(formula=V_TOT~TIPS, data=ery01, log='xy')
empirical
plot(empirical)
normal_factor <- min(branches$V_TOT)
empirical = sma(formula=(V_TOT/normal_factor)~TIPS, data=branches, log='xy')
normal_factor <- min(ery01$V_TOT)
empirical = sma(formula=(V_TOT/normal_factor)~TIPS, data=branches, log='xy')
normal_factor <- min(ery01$V_TOT)
empirical = sma(formula=(V_TOT/normal_factor)~TIPS, data=ery01, log='xy')
plot(empirical)
empirical
plot_volume(ery01)
source("plot.R")
plot_volume(ery01)
fit = 0
plot_volume(ery01)
plot_volume(ery01, "Ery_01")
plot_volume(ery01, name="Ery_01")
normal_factor <- min(ery01$V_TOT)
empirical = sma(formula=TIPS~(V_TOT/normal_factor), data=ery01, log='xy')
normal_factor <- min(ery01$V_TOT)
empirical = sma(formula=TIPS~(V_TOT), data=ery01, log='xy')
empirical
plot(empirical)
empirical$coef
empirical$coef$slope
empirical$coef["slope"]
summary(empirical)
summary(empirical)$slope
names
colnames(empirical)
empirical$coef
empirical$coef[1]
empirical$coef[[2]]
empirical$coef[[1]]
empirical$coef[[1]]$slope
empirical$coef[[1]][1]
empirical$coef[[1]][1,2]
empirical$coef[[1]][2,1]
source("workflow.R")
source("workflow.R")
range(joined_data$EMPIRICAL)
range(joined_data$THETA)
source("plot.R")
source("plot.R")
plot_empirical_wbe(joined_data)
source("plot.R")
plot_empirical_wbe(joined_data)
source("plot.R")
plot_empirical_wbe(joined_data)
joined_data$EMPIRICAL
joined_data$EMPIRICAL <- as.numeric(joined_data$EMPIRICAL)
plot_empirical_wbe(joined_data)
joined_data$WBE
joined_data$BETA
joined_data$WBE <- as.numeric(joined_data$WBE)
plot_empirical_wbe(joined_data)
joined_data$THETA <- as.numeric(joined_data$THETA)
plot_empirical_asym(joined_data)
source("plot.R")
plot_asymmetry(joined_data)
joined_data$D_BETA <- as.numeric(joined_data$D_BETA)
joined_data$D_GAMMA <- as.numeric(joined_data$D_GAMMA)
plot_asymmetry(joined_data)
colnames(joined_data)
joined_data
source("plot.R")
plot_empirical_asym(joined_data)
joined_data$THETA
joined_data$EMPIRICAL
joined_data$SITE
joined_data$SITE <- as.factor(joined_data$SITE)
plot_empirical_asym(joined_data)
source("plot.R")
plot_empirical_asym(joined_data)
source("plot.R")
plot_empirical_asym(joined_data)
source("plot.R")
plot_empirical_asym(joined_data)
plot_empirical_sym(joined_data)
plot_empirical_wbe(joined_data)
plot_empirical_wbe
plot_empirical_wbe(joined_data)
source("plot.R")
plot_empirical_wbe(joined_data)
source("plot.R")
plot_empirical_wbe(joined_data)
?stat_poly_eq
??stat_poly_eq
plot_empirical_wbe(joined_data)
source("plot.R")
plot_empirical_wbe(joined_data)
source("plot.R")
plot_empirical_wbe(joined_data)
